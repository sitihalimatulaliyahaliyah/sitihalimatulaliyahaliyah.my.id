services:
  app:
    build:
      context: .
      dockerfile: DockerFile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - ./public:/var/www/public
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    depends_on:
      db:
        condition: service_healthy
    working_dir: /var/www
    command: php-fpm
    environment:
      APP_ENV: production
      APP_DEBUG: false
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel
      DB_PASSWORD: secret
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "php", "-r", "echo 'OK';"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./sitihalimatulaliyahaliyah.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www
      - ./public:/var/www/public
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - ecommerce

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'nginx -s reload'; sleep 12h & wait \$${!}; done"
    networks:
      - ecommerce

  db:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel_db
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  ecommerce:
    driver: bridge
